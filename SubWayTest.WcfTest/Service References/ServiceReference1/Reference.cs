//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SubWayTest.WcfTest.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ISubwayMemberService")]
    public interface ISubwayMemberService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubwayMemberService/Index", ReplyAction="http://tempuri.org/ISubwayMemberService/IndexResponse")]
        void Index();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubwayMemberService/Index", ReplyAction="http://tempuri.org/ISubwayMemberService/IndexResponse")]
        System.Threading.Tasks.Task IndexAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubwayMemberService/Create", ReplyAction="http://tempuri.org/ISubwayMemberService/CreateResponse")]
        void Create(SubWayTest.Domain.SubwayMember subwayMember);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubwayMemberService/Create", ReplyAction="http://tempuri.org/ISubwayMemberService/CreateResponse")]
        System.Threading.Tasks.Task CreateAsync(SubWayTest.Domain.SubwayMember subwayMember);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubwayMemberService/Update", ReplyAction="http://tempuri.org/ISubwayMemberService/UpdateResponse")]
        void Update(SubWayTest.Domain.SubwayMember subwayMember);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubwayMemberService/Update", ReplyAction="http://tempuri.org/ISubwayMemberService/UpdateResponse")]
        System.Threading.Tasks.Task UpdateAsync(SubWayTest.Domain.SubwayMember subwayMember);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubwayMemberService/Delete", ReplyAction="http://tempuri.org/ISubwayMemberService/DeleteResponse")]
        void Delete(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubwayMemberService/Delete", ReplyAction="http://tempuri.org/ISubwayMemberService/DeleteResponse")]
        System.Threading.Tasks.Task DeleteAsync(System.Guid id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISubwayMemberServiceChannel : SubWayTest.WcfTest.ServiceReference1.ISubwayMemberService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SubwayMemberServiceClient : System.ServiceModel.ClientBase<SubWayTest.WcfTest.ServiceReference1.ISubwayMemberService>, SubWayTest.WcfTest.ServiceReference1.ISubwayMemberService {
        
        public SubwayMemberServiceClient() {
        }
        
        public SubwayMemberServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SubwayMemberServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SubwayMemberServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SubwayMemberServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Index() {
            base.Channel.Index();
        }
        
        public System.Threading.Tasks.Task IndexAsync() {
            return base.Channel.IndexAsync();
        }
        
        public void Create(SubWayTest.Domain.SubwayMember subwayMember) {
            base.Channel.Create(subwayMember);
        }
        
        public System.Threading.Tasks.Task CreateAsync(SubWayTest.Domain.SubwayMember subwayMember) {
            return base.Channel.CreateAsync(subwayMember);
        }
        
        public void Update(SubWayTest.Domain.SubwayMember subwayMember) {
            base.Channel.Update(subwayMember);
        }
        
        public System.Threading.Tasks.Task UpdateAsync(SubWayTest.Domain.SubwayMember subwayMember) {
            return base.Channel.UpdateAsync(subwayMember);
        }
        
        public void Delete(System.Guid id) {
            base.Channel.Delete(id);
        }
        
        public System.Threading.Tasks.Task DeleteAsync(System.Guid id) {
            return base.Channel.DeleteAsync(id);
        }
    }
}
